generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model categories {
  id               BigInt             @id @default(autoincrement())
  slug             String             @unique(map: "categories_slug_idx") @db.VarChar(100)
  title            String             @db.VarChar(2000)
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?          @default(now()) @db.Timestamptz(6)
  event_categories event_categories[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model event_categories {
  historical_event_id BigInt
  category_id         BigInt
  categories          categories        @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  historical_events   historical_events @relation(fields: [historical_event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([historical_event_id, category_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model event_media {
  historical_event_id BigInt
  media_id            BigInt
  historical_events   historical_events @relation(fields: [historical_event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  media               media             @relation(fields: [media_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([historical_event_id, media_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model historical_events {
  id               BigInt             @id @default(autoincrement())
  slug             String             @unique(map: "historical_events_slug_idx") @db.VarChar(100)
  title            String             @db.VarChar(2000)
  summary          String?
  detail           String?
  location         String?            @db.VarChar(2000)
  importance       Int
  begin_date       String             @db.VarChar(1000)
  end_date         String             @db.VarChar(1000)
  timeline_id      BigInt?
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?          @default(now()) @db.Timestamptz(6)
  event_categories event_categories[]
  event_media      event_media[]
  timelines        timelines?         @relation(fields: [timeline_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  timeline_events  timeline_events[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model media {
  id              BigInt        @id @default(autoincrement())
  slug            String        @unique(map: "media_slug_idx") @db.VarChar(100)
  alternativetext String?
  caption         String?
  url             String?       @db.VarChar(2000)
  width           Int?
  height          Int?
  formats         String?
  created_at      DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?     @default(now()) @db.Timestamptz(6)
  event_media     event_media[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model period_timelines {
  period_id   BigInt
  timeline_id BigInt
  periods     periods   @relation(fields: [period_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  timelines   timelines @relation(fields: [timeline_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([period_id, timeline_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model periods {
  id               BigInt             @id @default(autoincrement())
  slug             String             @unique(map: "periods_slug_idx") @db.VarChar(100)
  title            String             @db.VarChar(2000)
  summary          String?
  begin_date       String             @db.VarChar(1000)
  end_date         String             @db.VarChar(1000)
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?          @default(now()) @db.Timestamptz(6)
  period_timelines period_timelines[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model timeline_events {
  timeline_id         BigInt
  historical_event_id BigInt
  historical_events   historical_events @relation(fields: [historical_event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  timelines           timelines         @relation(fields: [timeline_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([timeline_id, historical_event_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model timelines {
  id                BigInt              @id @default(autoincrement())
  slug              String              @unique(map: "timelines_slug_idx") @db.VarChar(100)
  title             String              @db.VarChar(2000)
  summary           String?
  scale             String?             @db.VarChar(2000)
  begin_date        String              @db.VarChar(1000)
  end_date          String              @db.VarChar(1000)
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?           @default(now()) @db.Timestamptz(6)
  historical_events historical_events[]
  period_timelines  period_timelines[]
  timeline_events   timeline_events[]
}
